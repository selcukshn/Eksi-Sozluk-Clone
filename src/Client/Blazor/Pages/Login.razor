@page "/giris"

<PageTitle>giriş - ekşi sözlük</PageTitle>

<h1 class="title mb-4">giriş</h1>
@if (Error != string.Empty)
{
    <p class="text-danger fs-09 m-0">@Error</p>
}
<EditForm Model="@LoginCommand" OnValidSubmit="TryLogin" class="d-flex flex-column gap-2 w-50 pt-4 pb-5">
    <DataAnnotationsValidator />
    <div>
        <label class="form-label">e-mail adresi</label>
        <input @bind-value="LoginCommand.Email" type="text" class="form-control">
    </div>
    <div>
        <label class="form-label">şifre</label>
        <input @bind-value="LoginCommand.Password" type="password" class="form-control">
    </div>
    <div class="form-check">
        <label class="form-check-label">
            <input type="checkbox" class="form-check-input" />
            unutma bunları sorucam sonra
        </label>
    </div>
    <button type="submit" class="btn btn-form">giriş yapmaya çabala</button>
</EditForm>

<h1 class="title mb-4">giremeyiş</h1>
<div class="d-flex flex-column gap-1 fs-09 color-white900">
    <a class="hover-text-underline" href="/sifremi-unuttum">şifremi unuttum</a>
    <a class="hover-text-underline" href="/kayit">kayıtlı kullanıcı olunası</a>
</div>

@code {
    [Inject] IAuthenticationRequestService authService { get; set; }
    [Inject] NavigationManager navManager { get; set; }
    UserLoginCommand LoginCommand = new UserLoginCommand("test@gmail.com", "asdasd");

    string Error = string.Empty;

    public async Task TryLogin()
    {
        var response = await authService.LoginAsync(LoginCommand);
        @* if (response.IsSuccess)
navManager.NavigateTo("/");
else
Error = response.Message; *@
        Error = response.Message;
    }
}