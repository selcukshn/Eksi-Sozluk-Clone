@page "/kayit"

<PageTitle>kayıt ol - ekşi sözlük</PageTitle>

<h1 class="title mb-4">yeni kullanıcı kaydı</h1>
@if (State.Status == ResponseStatus.Error)
{
    <p class="text-danger fs-09 m-0">@State.Message</p>
}
@if (State.Status == ResponseStatus.Success)
{
    <p class="text-success fs-09 m-0">kaydınız oluşturuldu, e-posta adresinize gelen bağlantıdan kaydınızı tamamladıktan
        sonra giriş yapabilirsiniz</p>
}
<EditForm Model="@RegisterCommand" OnValidSubmit="TryRegister" class="d-flex flex-column gap-2 w-50 pt-4 pb-5">
    <div>
        <label class="form-label">nick</label>
        <input @bind-value="RegisterCommand.Username" type="text" class="form-control">
    </div>
    <div>
        <label class="form-label">e-mail</label>
        <input @bind-value="RegisterCommand.Email" type="text" class="form-control">
    </div>
    <div>
        <label class="form-label">doğum tarihi</label>
        <div class="d-flex gap-1">
            <select class="form-select">
                @for (int i = 1; i <= 31; i++)
                {
                    <option value="@i">@i</option>
                }
            </select>
            <select class="form-select">
                @for (int i = 0; i < mounths.Length; i++)
                {
                    <option value="@mounths[i]">@mounths[i]</option>
                }
            </select>
            <select class="form-select">
                @for (int i = DateTime.Now.Year - 18; i >= 1900; i--)
                {
                    <option value="@i">@i</option>
                }
            </select>
        </div>
    </div>
    <section>
        <label class="form-label">cinsiyet</label>
        <div class="input-group">
            <label class="btn btn-gender" for="option1">kadın
                <input type="radio" class="btn-check btn-gender-option" name="options" id="option1" autocomplete="off">
            </label>

            <label class="btn btn-gender" for="option2">erkek
                <input type="radio" class="btn-check btn-gender-option" name="options" id="option2" autocomplete="off">
            </label>

            <label class="btn btn-gender" for="option3">başka
                <input type="radio" class="btn-check btn-gender-option" name="options" id="option3" autocomplete="off">
            </label>

            <label class="btn btn-gender" for="option4">boşver
                <input type="radio" class="btn-check btn-gender-option" name="options" id="option4" autocomplete="off"
                    checked>
            </label>
        </div>
    </section>
    <div class="d-flex gap-3 py-3">
        <i class="bi bi-info-square fs-12"></i>
        <p class="m-0 fs-09">
            hesap güvenliğiniz açısından şifrenizin <strong>diğer sitelerde kullandığınız şifrelerden farklı
                olmasını</strong> tavsiye ederiz.
        </p>
    </div>
    <div>
        <label class="form-label">şifre</label>
        <input @bind-value="RegisterCommand.Password" type="password" class="form-control">
        <ul class="password-requirement">
            <li>şifre en az 8 karakter</li>
            <li>en az bir büyük harf</li>
            <li>bir küçük harf</li>
            <li>rakam içermelidir.</li>
        </ul>
    </div>
    <div>
        <label class="form-label">şifre (tekrar)</label>
        <input @bind-value="RegisterCommand.RePassword" type="password" class="form-control">
        <ul class="password-requirement">
            <li>en az 1 küçük harf</li>
            <li>en az 1 büyük harf</li>
            <li>en az 1 rakam</li>
            <li>en az 8 karakter</li>
        </ul>
    </div>
    <div class="form-check">
        <label class="form-check-label">
            <input type="checkbox" class="form-check-input" />
            <a class="hover-text-underline" href="/kayit-sozlesme">ekşi sözlük kullanıcı sözleşmesi</a>ni
            okudum ve
            kabul ediyorum
        </label>
    </div>
    <button class="btn btn-form">kayıt ol işte böyle</button>
</EditForm>

@code {
    string[] mounths = new string[] { "ocak", "şubat", "mart", "nisan", "mayıs", "haziran", "temmuz", "ağustos", "eylül",
"ekim", "kasım", "aralık" };

    [Inject] IAuthenticationRequestService authService { get; set; }
    [Inject] NavigationManager navManager { get; set; }
    [Inject] ILocalStorageService storage { get; set; }
    UserCreateCommand RegisterCommand = new UserCreateCommand();
    ApplicationState State = new ApplicationState(ResponseStatus.Waiting);
    protected override async Task OnInitializedAsync()
    {
        if (await storage.HaveUserAsync())
            navManager.NavigateTo("/");
    }
    public async Task TryRegister()
    {
        var response = await authService.RegisterAsync(RegisterCommand);
        State.SetResponse(response);
    }

}